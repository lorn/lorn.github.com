<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[lornlab.]]></title>
  <link href="http://lornlab.org/atom.xml" rel="self"/>
  <link href="http://lornlab.org/"/>
  <updated>2012-07-06T16:07:27-03:00</updated>
  <id>http://lornlab.org/</id>
  <author>
    <name><![CDATA[Lindolfo 'Lorn' Rodrigues]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Debugging HTTP Request With Netcat]]></title>
    <link href="http://lornlab.org/blog/2012/06/28/debugging-http-request-with-netcat/"/>
    <updated>2012-06-28T20:45:00-03:00</updated>
    <id>http://lornlab.org/blog/2012/06/28/debugging-http-request-with-netcat</id>
    <content type="html"><![CDATA[<p>O que fazer quando você precisa usar uma API de terceiros e tudo funciona bem quando você está fazendo seus testes com curl.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl https://api.github.com/repos/lorn/lwp-curl/commits</span></code></pre></td></tr></table></div></figure>


<p>Mas quando você vai para sua linguagem botar a mão na massa, dá erro:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl "https://api.github.com/repos1/lorn/lwp-curl/commits1"
</span><span class='line'>
</span><span class='line'>{
</span><span class='line'>  "message": "Not Found"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>é claro que nem sempre o erro será tão claro, e principalmente quando você está fazendo POST/PUT com arquivos, como debugar? porque funciona no curl e não funciona na minha linguagem preferida?</p>

<blockquote><p>Netcat for the rescue!</p></blockquote>


<p>Netcat é o canivete suiço do mundo unix, se você nunca ouviu falar e quer aprender até a transferir arquivos via Netcat (!!) veja esse post do <a href="http://www.catonmat.net/blog/unix-utilities-netcat/">pkrumins</a> nesse caso especifico, vamos usar Netcat para debugar requisições HTTP e isso ele não mostra lá ;)</p>

<p>Essa requisição do curl:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl "localhost:9999/repos/lorn/lwp-curl/commits"</span></code></pre></td></tr></table></div></figure>


<p>Aparece assim no Netcat</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nc -l localhost 9999
</span><span class='line'>GET /repos/lorn/lwp-curl/commits HTTP/1.1
</span><span class='line'>User-Agent: curl/7.21.4 (universal-apple-darwin11.0) libcurl/7.21.4 OpenSSL/0.9.8r zlib/1.2.5
</span><span class='line'>Host: localhost:9999
</span><span class='line'>Accept: */*</span></code></pre></td></tr></table></div></figure>


<p>Agora ao invés de usar o curl, faça sua aplicação fazer o POST/PUT para o Netcat - localhost:9999 nesse exemplo - e veja a diferença entre o &#8216;debug&#8217; do nc, para quando a requisição vem do curl, e o &#8216;debug&#8217; do nc para quando a requisição vem da sua aplicação, no meu caso eu tinha esquecido de enviar o arquivo usando <a href="http://www.w3.org/Protocols/rfc1341/7_2_Multipart.html">HTTP Multipart</a>.</p>

<p>Para usar o Netcat no Mac:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nc -l localhost 9999</span></code></pre></td></tr></table></div></figure>


<p>Linux:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nc -l -p 9999</span></code></pre></td></tr></table></div></figure>


<p>Dica do <a href="http://dsouza.github.com/b/">dsouza</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Busca Pelo Deploy Contínuo - Parte 3]]></title>
    <link href="http://lornlab.org/blog/2011/12/03/a-busca-pelo-deploy-continuo-parte-3/"/>
    <updated>2011-12-03T10:03:00-02:00</updated>
    <id>http://lornlab.org/blog/2011/12/03/a-busca-pelo-deploy-continuo-parte-3</id>
    <content type="html"><![CDATA[<div id="litlebox">
Você está lendo a Parte 3 sobre &#8220;A Busca pelo deploy contínuo&#8221; eu recomendo você a começar pela <a href="http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-1/">Parte 1</a> e depois ler a <a href="http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-2/">Parte 2</a> se você já o fez, continue ;)
</div>


<p>Agora um exemplo de arquitetura para facilitar o uso do deploy continuo usando um <a href="http://en.wikipedia.org/wiki/Load_balancing_(computing">Load Balancer</a>).</p>

<p>Você não precisa de applicances milionários para fazer isso <a href="http://www.anchor.com.au/blog/2009/10/load-balancing-at-github-why-ldirectord/">o github</a>, serve 2500 conexões TCP por <strong>SEGUNDO</strong> usando o <a href="http://horms.net/projects/ldirectord/">ldirectord</a> em uma máquina Xen com 128mb.</p>

<p>Com um Load Balance, você consegue testar funcionalidades novas no site para uma pequena porção dos usuários do site e usar os gráficos ( que você já tem lógico ) para ver se ela é boa ou não.</p>

<p>Como fazer isso? faça o deploy para apenas 1 das &#8216;n&#8217; máquinas que você tem atrás do Load Balancer e redirecione, 5% ~ 10% das suas conexões dos seus usuários para essa máquina, o resto os gráficos que você preparou da sua aplicação irão te dizer ;)</p>

<p>Falando um pouco mais de arquitetura, e especificamente de Perl, eu gosto bastante de usar o Nginx + Starman a comunicação é feita via Unix Socket o Starman foi baseado no Unicorn do Ruby, ele funciona muito bem e&#8230;</p>

<iframe width="420" height="315" src="http://www.youtube.com/embed/dFUlAQZB9Ng" frameborder="0" allowfullscreen></iframe>


<p>&#8220;It&#8217;s a unix system I known this!&#8221; arquiteturas unix, forks, sockets e afins funcionam muito bem :)</p>

<p>O seu deploy consistiria em copiar os arquivos novos e mandar um sinal de reset para o pid do Starman:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kill -s USR2 1337</span></code></pre></td></tr></table></div></figure>


<p>Ele vai recarregar o código, e vai reiniciar todos os seus fork assim que eles forem ficando sem conexões ou seja para seus usuários a percepção de downtime será <strong>ZERO!</strong></p>

<p>Abaixo uma conf de exemplo para se usar no Nginx para se conectar a um socket gerado pelo Starman:</p>

<div><script src='https://gist.github.com/1126172.js?file='></script>
<noscript><pre><code>=pod

=encoding utf8

=head1 Uma arquitetura de alta disponibilidade usando Starman

Continuando a introdução dada pelo L&lt;nosso amigo que vence guerras|http://sao-paulo.pm.org/equinocio/2012/mar/13&gt;, falarei um pouco mais sobre o Starman e, como ele, não falarei sobre PSGI/Plack porque esses assuntos já foram muito bem explorados L&lt;em outros|http://sao-paulo.pm.org/artigo/2010/PSGI&gt; e L&lt;equinocios|http://sao-paulo.pm.org/equinocio/2011/set/11&gt;.

Essa arquitetura é baseada na arquitetura que o Github usa/usava que eles explicam L&lt;nesse post|https://github.com/blog/517-unicorn&gt; eles falam sobre como eles utilizam o Unicorn, o Starman foi baseado nesse cara o Miyagawa inclusive usou o nome Unicorn como &quot;inspiração&quot; para o nome Starman:

&quot;The name Starman is taken from the song (Star na Otoko) by the Japanese rock band Unicorn (yes, Unicorn!). It's also known as a song by David Bowie, a power-up from Super Mario Brothers and a character from Earthbound, all of which I love.&quot;

Mais um pouco sobre a historia do nome do Starman no blog dele:

L&lt;Good name for Perl UNIX forking web server?|http://bulknews.typepad.com/blog/2010/02/good-name-for-perl-unix-forking-web-server.html&gt;

O fonte desse artigo, assim como todos os arquivos de configuração e inicialização estão nesse L&lt;gist|https://gist.github.com/1126172&gt; não fique copiando e colando daqui, você pode pegar o arquivo separado lá ;)

=head2 Sendo amigo do seu syadmin

Eu fiz uma busca no APT agora, e não vi nenhum pacote do Starman. 

Mas isso não significa que você vai jogar essa bomba na mão do seu sysadmin, seja gentil com ele como diria o Bruce Lee:

   &quot;Be L&lt;Devops my friend|http://devops.com/&gt;&quot;

Faça scripts de inicialização, não é algo tão dificil e Shell Script é uma linguagem fácil L&lt;e que faz de você um desenvolvedor melhor|http://zachholman.com/posts/glue-languages/&gt; eu precisei subir o Starman em um CentOS e no Debian, abaixo estão os arquivos de inicialização para cada uma dessas distribuições a versão do Debian teve a revisão e ajustes do Nuba - eu tinha esquecido algum header/conf ;)

Debin:

    #!/bin/bash
     
    ### BEGIN INIT INFO
    # starman - this script starts and stops the starman daemon
    # Provides:          starman_sppm
    # Required-Start:    $local_fs $remote_fs $network $syslog
    # Required-Stop:     $local_fs $remote_fs $network $syslog
    # Default-Start:     2 3 4 5
    # Default-Stop:      0 1 6
    # Short-Description: starts the starman server
    # Description:       starts starman using start-stop-daemon
    ### END INIT INFO
     
    NAME=starman
    DESC=starman
     
    test -x $DAEMON || exit 0
     
    set -e
     
    . /lib/lsb/init-functions
    ## Variáveis de conf da sua App, ALTERE ISSO ANTES DE QUALQUER COISA.
    export starman=&quot;/usr/bin/starman&quot;
    export myapp_path=&quot;/var/www/myapp&quot;
    export pidfile=&quot;/var/run/starman.pid&quot;
     
     
    start() {
            echo -n $&quot;Starting Starman: &quot;
            ## eu inicio o starman para debug na porta 8080, é bom para testar algumas coisas dando bypass no nginx e tanto o log, quando o PID são criados com o usuário do nginx, para ficar mais fácil 
            $starman -I${myapp_path}/lib --user=nginx --listen :8080 --listen /var/run/nginx/starman.sock --daemonize --pid ${pidfile} --error-log /var/log/nginx/starman.log ${myapp_path}/${myapp}.psgi
            RETVAL=$?
            echo
            [ $RETVAL = 0 ]
            return $RETVAL
    }
     
    restart() {
            echo -n $&quot;Restarting Starman: &quot;
            export PID=`cat ${pidfile}`
            kill -s USR2 $PID 
            RETVAL=$?
            echo
            [ $RETVAL = 0 ]
            return $RETVAL
    }
     
    stop() {
            echo -n $&quot;Stopping Starman: &quot;
            killproc -p ${pidfile} -d 10 $starman
            RETVAL=$?
            echo
            [ $RETVAL = 0 ] &amp;&amp; rm -f ${pidfile}
    }
    # See how we were called.
    case &quot;$1&quot; in
      start)
            start
            ;;
      restart)
            restart
             ;;
      stop)
            stop
            ;;
      *)
            echo $&quot;Usage: starman {start|restart|stop}&quot;
            exit 1
    esac
     
    exit $RETVAL

CentOS

    #!/bin/bash
     
    # starman - this script starts and stops the starman daemon
    #
    # chkconfig:   - 85 15
    # description: Starman 
    # processname: starman
    # pidfile :    /var/run/starman.pid
    # www file:    /var/www/myapp
     
     
    # Source function library.
    . /etc/rc.d/init.d/functions
     
    ## Variáveis de conf da sua App, ALTERE ISSO ANTES DE QUALQUER COISA.
    export starman=&quot;/usr/bin/starman&quot;
    export myapp_path=&quot;/var/www/myapp&quot;
    export pidfile=&quot;/var/run/starman.pid&quot;
     
     
    start() {
            echo -n $&quot;Starting Starman: &quot;
            ## eu inicio o starman para debug na porta 8080, é bom para testar algumas coisas dando bypass no nginx e tanto o log, quando o PID são criados com o usuário do nginx, para ficar mais fácil 
            $starman -I${myapp_path}/lib --user=nginx --listen :8080 --listen /var/run/nginx/starman.sock --daemonize --pid ${pidfile} --error-log /var/log/nginx/starman.log ${myapp_path}/${myapp}.psgi
            RETVAL=$?
            echo
            [ $RETVAL = 0 ]
            return $RETVAL
    }
     
    restart() {
            echo -n $&quot;Restarting Starman: &quot;
            export PID=`cat ${pidfile}`
            kill -s USR2 $PID 
            RETVAL=$?
            echo
            [ $RETVAL = 0 ]
            return $RETVAL
    }
     
    stop() {
            echo -n $&quot;Stopping Starman: &quot;
            killproc -p ${pidfile} -d 10 $starman
            RETVAL=$?
            echo
            [ $RETVAL = 0 ] &amp;&amp; rm -f ${pidfile}
    }
    # See how we were called.
    case &quot;$1&quot; in
      start)
            start
            ;;
      restart)
            restart
             ;;
      stop)
            stop
            ;;
      *)
            echo $&quot;Usage: starman {start|restart|stop}&quot;
            exit 1
    esac
     
    exit $RETVAL

=head2 Nginx + Starman


Como vocês leram, ou não, no post do github a arquitetura deles consistem em usar o servidor do Unicorn atrás do Nginx e a comunidação entre eles é feita via Unix Socket \,,/ 

O Nginx fala diretamente com os &quot;workers&quot; do Starman atráves do Starman Master, quando o Starman inicia ele sobe 'n' workers que são controlados pelo processo principal, toda requisição é processado pelos workers.

Com isso você ganha algumas funcionalidades interessantes como hotdeploy, que é o ato de você subir uma nova versão da sua aplicação com ZERO DOWNTIME!!!!111

Como funciona, basta você atualizar os arquivos da sua aplicação - não irá alterar nada até você reiniciar o serviço - e na hora de reiniciar o serviço é só mandar o sinal USR2 para o PID Master do Starman, isso irá dizer para ele que a aplicação precisa ser reiniciada ele irá reiniciar os seus workers paulatinamente, assim que eles ficarem ociosos até que todos estejam rodando a nova versão da aplicação.

Ah, a função restart dos arquivos de inicialização que eu falei lá em cima já faz esse trabalho :)

Por padrão o Starman inicia apenas 5 workers, eles podem aguentar bastante coisa, mas dependendo da sua configuração de hardware você pode ter mais mas cuidado com swap, se a memoria está indo para swap é bom você diminuir esse número.

    upstream myapp_starman {
      server unix:/tmp/starman.sock fail_timeout=0;
    }
   
    server {
      listen 80;
   
    client_max_body_size 1024m;
    client_body_buffer_size 8k;
    proxy_read_timeout 300;
   
    ##
    # basic
    ##
    server_name www.localhost.com;
    root /home/user/MyApp/root;
    keepalive_timeout 0;
   
    ##
    # logging
    ##
    access_log /var/log/nginx/myapp.access combined;
    error_log /var/log/nginx/myapp.error;
    
    location /static {
          root  /home/user/MyApp/root/;
          autoindex on;
    }
   
    ##
    # proxy
    ##
    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_buffering off;
      if (!-f $request_filename) {
        proxy_pass http://myapp_starman;
      }
    }
   }

=head1 AUTHOR 

Lindolfo &quot;Lorn&quot; Rodrigues - lorn at cpan.org

=cut
</code></pre></noscript></div>


<p>Bom, basicamente é isso se tiver alguma duvida pergunte nos comentários :)</p>

<h2>Bibliografia</h2>

<p>Alguns slides foram copiados dessa palestra da etsy:</p>

<div style="width:425px" id="__ss_8727786"> <strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/OReillyOSCON/put-a-button-on-it-removing-barriers-to-going-fast" title="Put a Button on It: Removing Barriers to Going Fast" target="_blank">Put a Button on It: Removing Barriers to Going Fast</a></strong> <iframe src="http://www.slideshare.net/slideshow/embed_code/8727786" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe> <div style="padding:5px 0 12px"> View more presentations from <a href="http://www.slideshare.net/OReillyOSCON" target="_blank">OSCON </a> </div> </div>


<p>E outros foram copiados dessa palestra da AOE Media</p>

<div style="width:425px" id="__ss_5345889"> <strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/typo3media/continuous-deployment-5345889" title="Continuous deployment" target="_blank">Continuous deployment</a></strong> <iframe src="http://www.slideshare.net/slideshow/embed_code/5345889" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe> <div style="padding:5px 0 12px"> View more <a href="http://www.slideshare.net/" target="_blank">presentations</a> from <a href="http://www.slideshare.net/typo3media" target="_blank">Daniel</a> </div> </div>


<p>Obrigado :) qualquer dúvida estou a disposição nos comentários.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Busca Pelo Deploy Contínuo - Parte 2]]></title>
    <link href="http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-2/"/>
    <updated>2011-12-02T11:23:00-02:00</updated>
    <id>http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-2</id>
    <content type="html"><![CDATA[<div id="litlebox">
Você está lendo a Parte 2 sobre &#8220;A Busca pelo deploy contínuo&#8221; eu recomendo você a começar pela <a href="http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-1/">Parte 1</a> mas se já leu as duas partes, leia a <a href="http://lornlab.org/blog/2011/12/03/a-busca-pelo-deploy-continuo-parte-3/">Parte 3</a>.
</div>


<p>Agora que você já está convencido que precisa disso, ou não, vou começar a falar de algumas ferramentas/técnicas que você pode usar para te ajudar no processo:</p>

<ul>
<li><p>SCM - Software Configuration Management</p>

<p>Também conhecido como VCS ( Version Control System ), você precisa disso, se você não tem <strong>há algo muito errado</strong> e se você está usando Subversion, isso não é tão ruim, mas comece a usar git a partir de hoje, sério.</p></li>
<li><p>Testes</p>

<p>Se você acha que teste é besteira, então deploy continuo é besteira para você também. É impossível ter um deploy contínuo confiável sem testes</p></li>
<li><p>Continuos Integration Software</p>

<p>Esse tipo de software tem um papel simples, porem eficaz, ele fica fazendo &#8220;pooling&#8221; no seu SCM, a cada commit seu ele vai rodar o seu processo de &#8220;build&#8221; para ver se ele continua funcionando depois do código que você acabou de comitar, um processo de build pode conter:</p>

<ul>
<li>Gerar pacotes</li>
<li>Verificar códigos/dependências</li>
<li>Testes Unitários</li>
<li>Testes de Integração</li>
<li>Testes de Segurança</li>
<li>Testes funcionais</li>
</ul>


<p>E caso algum teste tenha parado de funcionar, ele vai te enviar um email avisando que o build está quebrado.</p>

<p>Eu uso e gosto bastante do <a href="http://jenkins-ci.org/">Jenkins</a>, conhecido antes como Hudson. Mas há muitos outros por ai, você só precisa escolher um.</p></li>
<li><p>Script de Deploy/Rollback para você começar, depois de ter todas essas coisas acima, você já pode a pensar em automatizar seu processo de deploy/rollback.</p>

<ul>
<li>./deploy.sh    # faz o deploy</li>
<li>./rollback.sh  # faz o rollback do ultimo deploy</li>
</ul>


<p>Simples assim, mas tem que ser um script só que faz todo o trabalho, copiar arquivos, reinciar webserver etc</p>

<p>Na Etsy quando o script ficou avançado eles evoluiram para um software web, que inclusive é opensource mais detalhes aqui: <a href="http://codeascraft.etsy.com/2010/05/20/quantum-of-deployment/">Deploynator Etsy</a></p></li>
<li><p>Puppet/Chef - eu não sei qual o nome dessa categoria de software, o que você faz com eles é escrever &#8220;receitas&#8221; de máquinas, imagine que a empresa está crescendo e você precisa montar 10 novos webservers que incluem:</p>

<ul>
<li>Instalar SO</li>
<li>Configurar SO</li>
<li>Configurar Firewall</li>
<li>Configurar Webserver</li>
<li>Configurar seu sistema</li>
<li>Colocar ela no pool de webservers</li>
</ul>


<p>Tirando a instalação do Linux, todo o resto você pode automatizar com puppet ou chef você cria receitas nele dizendo como ele vai configurar seu Webserver, seu sistema e depois é só executar essa receita na máquina ele vai instalar o pacote e fazer todo o trabalho pra você.</p>

<p>E você vai precisar fazer isso UMA vez para &#8216;n&#8217; maquinas, e quando precisar mudar algo e só alterar na receita ele mantém as maquinas sincronizadas com sua receitas, nada de sair editando o mesmo arquivo em várias máquinas.</p></li>
<li><p>Monitoramento</p>

<ul>
<li><p>Sistema Base/Nagios</p>

<p>Você precisa monitorar o estado do seu sistema, vê se o Apache tá de pé se o disco tá cheio isso é bem comum, no minímo você já ouviu falar.</p></li>
<li><p>Seu negócio</p>

<p>Você precisa também monitorar o seu negócio, você precisa saber que horas que acontecem mais vendas e precisa saber agora, nada de rodar aquela query no banco de dados <strong>faça gráfico de toda informação que você puder monitorar</strong>.</p>

<p>Além desses gráficos ajudar o pessoal de Marketing/Vendas vai te ajudar quando entrar alguma funcionalidade nova no site, porque sempre tem um espertão na empresa, e muitas vezes esse espertão é o dono, que vai dizer:</p>

<p><blockquote><p>Acho que depois que você colocou aquela funcionalidade no site, o site está vendendo menos, estou com esse pressentimento.<br/>     - Espertão</p></blockquote></p>

<p>A Etsy liberou recentemente a ferramente que eles fizeram para fazer gráficos, vale a pena dar uma olhada <a href="http://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/">Measure Anything, Measure Everything</a> eles contam bastante expêriencia deles com geração de gráfico para tudo, até para a quantidade de café na cozinha!</p>

<p>Então tenha gráficos de tudo e mostre para ele no melhor sentido <a href="https://twitter.com/opachefe">Opa chefe! tranquilo chefe!</a>.</p></li>
</ul>
</li>
</ul>


<h2>Continua ..</h2>

<div id="litlebox">
Você está lendo a Parte 2 sobre &#8220;A Busca pelo deploy contínuo&#8221; eu recomendo você a começar pela <a href="http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-1/">Parte 1</a> mas se já leu as duas partes, leia a <a href="http://lornlab.org/blog/2011/12/03/a-busca-pelo-deploy-continuo-parte-3/">Parte 3</a>.
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Busca Pelo Deploy Contínuo - Parte 1]]></title>
    <link href="http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-1/"/>
    <updated>2011-12-02T11:23:00-02:00</updated>
    <id>http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-1</id>
    <content type="html"><![CDATA[<div id="litlebox">
Você está lendo a Parte 1 sobre &#8220;A Busca pelo deploy contínuo&#8221; esse post tem mais duas continuações: <a href="http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-2/">Parte 2</a> e <a href="http://lornlab.org/blog/2011/12/03/a-busca-pelo-deploy-continuo-parte-3/">Parte 3.</a>
</div>


<p>No dia 05/11 apresentei  no <a href="http://www.yapcbrasil.org.br/2011/">YAPC::Brasil</a> uma palestra com o nome
&#8220;Em busca do deploy continuo&#8221; nesse post vou tentar descrever sobre tudo o que eu falei.</p>

<div style="width:425px" id="__ss_10173611"> <strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/lornlab/a-busca-pelo-deploy-continuo" title="A busca pelo deploy continuo" target="_blank">A busca pelo deploy continuo</a></strong> <iframe src="http://www.slideshare.net/slideshow/embed_code/10173611" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe> <div style="padding:5px 0 12px"> View more <a href="http://www.slideshare.net/" target="_blank">presentations</a> from <a href="http://www.slideshare.net/lornlab" target="_blank">Lindolfo Rodrigues Oliveira Neto</a> </div> </div>


<h2>Como começar?</h2>

<p>Infelizmente o principal problema do &#8220;Deploy Continuo&#8221; não é técnico e sim cultural, e mudança de cultura é muito mais difícil que mudança de Banco de Dados ou de Linguagem de Programação é enraizado nas fundações da empresa, esses são alguns exemplos culturais:</p>

<ul>
<li><p>Falta de confiança</p></li>
<li><p>Processos complicado/complexos para tudo</p></li>
</ul>


<blockquote><p>Processo é uma reação à estupidez incorporada antes<br/> - Clay Shirky</p></blockquote>


<p> Em português claro, esse seria o famoso &#8220;vai que&#8230;&#8221; :</p>

<ul>
<li>Vai que alguém faz uma alteração errada e o site fica fora do ar</li>
<li>Vai que alguém cria uma tabela nova e o site fica fora do ar.</li>
</ul>


<p>Ainda bem que esse pessoal de processo não conhece o <a href="http://pt.wikipedia.org/wiki/Efeito_borboleta">Efeito Borboleta</a> se não eles iam criar coisas bem piores.</p>

<p>Em Startups esse tipo de coisa não acontece porque, geralmente, se tem pouco recurso e é necessário já pensar em Deploy/Integração continua desde o início, pois você precisa entregar valor para seu usuário para continuar vivo, você não tem uma receita fixa.</p>

<p>Então, se você for esperar a próxima madrugada para subir a funcionalidade que já está pronta, , fica dificil pivotear talvez essa funcionalidade não seja bem vista por seus usuários, eles entenderam errado, então é necessário não só coloca-la rápida em produção como tirar rápido também :)</p>

<p>Imagine demorar 48h para concluir esse fluxo todo, você pode perder usuários preciosos.</p>

<p>O <a href="http://github.com">github.com</a> que é era uma startup e agora, mesmo depois de passar dos 40 funcionários, continua com as mesmas idéias de desenvolvimento baseado em software livre e deploy contínuo.</p>

<p>Caso você queira conhecer como funciona o processo de desenvolvimento/trabalho no github, eu recomendo a lida desse <a href="http://zachholman.com/posts/how-github-works/">post do Zach Holman</a> que é um dos funcionário mais antigos por lá e caso você não queira conhecer :)</p>

<p>Recentemente <a href="http://zachholman.com/talk/how-github-uses-github-to-build-github">ele deu uma palestra</a> falando um pouco mais sobre isso e como se usar o github como plataforma para esse processo ser aplicado em qualquer empresa.</p>

<p>Mas até agora, eu sou falei de empresinhas pequenas, por mais que elas ganhem algum dinheiro não tem um nome a zelar.</p>

<blockquote><p>Quero ver isso funcionar em uma empresa grande!<br/> - Cara de processo</p></blockquote>


<p>Funciona, vou te dizer dois exemplos:</p>

<ul>
<li><p>Amazon</p></li>
<li><p>Etsy</p></li>
</ul>


<p>A <a href="http://amazon.com">Amazon</a> chegou a divulgar em um apresentação na Velocity 2011 que faz um deploy a cada 11.6 segundos e você aí feliz por ter conseguido uma janela mais cedo para fazer seu deploy né?</p>

<p>A <a href="http://etsy.com">Etsy</a>, não é muito famosa aqui no Brasil, e a conheci ela antes de me interessar sobre deploy continuo comprei um adesivo com uma frase de StarWars lá :) eles funcionam como um Mercado Livre para artesões e outras profissões &#8220;hand-made&#8221;.</p>

<p>Eles tem a bagatela de 1 bilhão de pageview por mês!</p>

<p>Caso você queira entender como funciona o deploy continuo na Etsy, e como era a vida deles antes do deploy continuo veja essa palestra:</p>

<iframe width="560" height="340" src="http://cdn.livestream.com/embed/etsy?layout=4&amp;clip=pla_adbab6e2-c629-4bfe-b1fd-21c898693282&amp;height=340&amp;width=560&amp;autoplay=false" style="border:0;outline:0" frameborder="0" scrolling="no"></iframe>


<div style="font-size: 11px;padding-top:10px;text-align:center;width:560px">Watch <a href="http://www.livestream.com/?utm_source=lsplayer&amp;utm_medium=embed&amp;utm_campaign=footerlinks" title="live streaming video">live streaming video</a> from <a href="http://www.livestream.com/etsy?utm_source=lsplayer&amp;utm_medium=embed&amp;utm_campaign=footerlinks" title="Watch etsy at livestream.com">etsy</a> at livestream.com</div>


<p>Tudo isso começou na Etsy, porque um ex-flickr foi contratado para ser o CTO lá e o flickr foi bem pioneiro nesse negócio de deploy contínuo, você pode ver um pouco mais sobre isso nessa outra palestra:</p>

<iframe src="http://blip.tv/play/AYGMoH8C.html" width="480" height="300" frameborder="0" allowfullscreen></iframe>


<p><embed type="application/x-shockwave-flash" src="http://a.blip.tv/api.swf#AYGMoH8C" style="display:none"></embed></p>

<h2>Continua ..</h2>

<div id="litlebox">
Você está lendo a Parte 1 sobre &#8220;A Busca pelo deploy contínuo&#8221; esse post tem mais duas continuações: <a href="http://lornlab.org/blog/2011/12/02/a-busca-pelo-deploy-continuo-parte-2/">Parte 2</a> e <a href="blog/2011/12/03/a-busca-pelo-deploy-continuo-parte-3/">Parte 3.</a>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lá E Devolta Outra Vez]]></title>
    <link href="http://lornlab.org/blog/2011/09/26/la-e-devolta-outra-vez/"/>
    <updated>2011-09-26T15:05:00-03:00</updated>
    <id>http://lornlab.org/blog/2011/09/26/la-e-devolta-outra-vez</id>
    <content type="html"><![CDATA[<p>Depois de muito pensar, e a preguiça dominar, resolvi continuar no bom e velho wordpress até fiz o tão
prometido blog em catalyst, mas a parte de design css/html e afins deu um trabalhinho e não está do jeito que eu quero e
o wordpress tem tantos temas legais. Pelo menos aprendi bastante fazendo o blog, inclusive tem um branch ativo agora porque
estou migrando a parte de persistencia para CouchDB.</p>

<p>Update: Mudei para o tumblr e meu blog agora fica no <a href="http://blog.lornlab.or">http://blog.lornlab.org</a></p>

<p>Update 2: Agora estou migrando para o <a href="http://octopress.org">Octopress</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Biblioteca Pessoal De Neil Gaiman]]></title>
    <link href="http://lornlab.org/blog/2011/05/19/a-biblioteca-pessoal-de-neil-gaiman/"/>
    <updated>2011-05-19T00:03:00-03:00</updated>
    <id>http://lornlab.org/blog/2011/05/19/a-biblioteca-pessoal-de-neil-gaiman</id>
    <content type="html"><![CDATA[<p>Quando vi esse site pela primeira vez, e como eu já tinha lido alguma entrevista do Donald Knuth em que ele falava que tinha
a mesma poltrona desde 1960 e só trocava o forro externo, eu percebi que precisava comprar uma poltrona para ler livros  :)</p>

<p>Ainda estou a procura, aquelas que tem na Starbucks é tudo importada :/ estou procurando algum clone brasileiro delas, mas acho que não vai ser fácil achar.</p>

<p>Bom, voltando ao título olha como é a biblioteca pessoal do Neil Gaiman! para quem não conhece Neil Gaiman é o criador do Sandman e
outras livros/quadrinhos famosos, mas o que eu mais gosto e li foi Sandman, e só pelo Sandman ele já merece algum respeito.</p>

<p><a href="http://blog.shelfari.com/my_weblog/2009/09/neil.html">http://blog.shelfari.com/my_weblog/2009/09/neil.html</a></p>

<p><img class="center" src="http://blog.shelfari.com/.a/6a00d8341e478253ef0120a53fe68a970c-800wi"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackers Que Você Deveria Conhecer (1): Brad Fitzpatrick]]></title>
    <link href="http://lornlab.org/blog/2011/05/17/hackers-que-voce-deveria-conhecer-1-brad-fitzpatrick/"/>
    <updated>2011-05-17T22:45:00-03:00</updated>
    <id>http://lornlab.org/blog/2011/05/17/hackers-que-voce-deveria-conhecer-1-brad-fitzpatrick</id>
    <content type="html"><![CDATA[<p>Esta série de posts é baseada na idéia do site  <a href="http://papodehomem.com.br/homens-que-voce-deveria-conhecer-homem-da-capa-preta-tenorio-cavalcante/">Papodehomem</a>
que tem uma série parecida chamada &#8220;Homens que você devia conhecer&#8221;.</p>

<p>A ideia é falar de hackers em geral, tipo algum dia pode ter uma história de um cortador de lenha que fez uma mesa só com seu machado
por exemplo :) Esse é um exemplo clássico de hacker.</p>

<p><img class="center" src="http://media.tumblr.com/tumblr_ljiu9qSdTJ1qhdaqj.png"></p>

<p>Brad Fitzpatrick é um dos muitos hackers programadores que você deveria conhecer ou ao menos saber o que ele já fez.</p>

<p>Ele é o criador do Memcached e do OpenID.</p>

<p>Lá nos meados de 1999 ele começou um projeto pessoal para manter o pessoal do colegio informado, algo parecido com o
que fazemos na lista de discussões da faculdade ele chamou esse projetinho de Live Journal, que até pouco tempo [citation needed] era o maior serviço de blogs do mundo.</p>

<p>Essa empresa não foi só importante para o Brad Fitzpatrick mas também para a internet como um todo pois, com o sucesso dela,
foi necessário criar coisas como Memcached e OpenID, dentre outros excelentes <a href="http://www.danga.com/">Software</a> Livres que foram criados baseados na demanda do LiveJornal.</p>

<p>No evento <a href="http://www.perlworkshop.com.br/">Perl Workshop</a> , ele contou que teve a ideia do Memcached quando o LiveJornal estava crescendo e ia demorar 2 semanas para chegar
os novos servidores, em 12h ele fez a primeira versão do Memcached.</p>

<p>Outra coisa engraçada que ele contou no evento foi dizer que <a href="http://www.danga.com/mogilefs/">MogileFS</a>  é um anagrama para OMG files :)</p>

<p>Em 2005 o <a href="http://news.livejournal.com/82926.html">LiveJornal foi comprado pela Sixapart</a>, e em 2008 ele foi trabalhar no Google.</p>

<p>Ele também é contribuidor ativo no <a href="http://search.cpan.org/~bradfitz/">CPAN</a> , apesar de estar trabalhando no Google focando na linguagem de programação Go, o ultimo projeto que ele
está trabalhando é o <a href="http://camlistore.org/">Camlistore</a> - escrito em Go, que vale um post só pra ele porque é um proejto bem interessante.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Como Funciona a Escala Pentatonica]]></title>
    <link href="http://lornlab.org/blog/2011/04/15/como-funciona-a-escala-pentatonica/"/>
    <updated>2011-04-15T23:59:00-03:00</updated>
    <id>http://lornlab.org/blog/2011/04/15/como-funciona-a-escala-pentatonica</id>
    <content type="html"><![CDATA[<iframe src="http://player.vimeo.com/video/5732745" width="400" height="300" frameborder="0"></iframe>


<p><a href="http://vimeo.com/5732745">World Science Festival 2009: Bobby McFerrin Demonstrates the Power of the Pentatonic Scale</a> from <a href="http://vimeo.com/user1103909">World Science Festival</a> on <a href="http://vimeo.com">Vimeo</a>.</p>


<p>Como funciona a escala pentatonica e sua ligação com o cérebro</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meu Ambiente De Trabalho Em N Itens]]></title>
    <link href="http://lornlab.org/blog/2011/04/12/meu-ambiente-de-trabalho-em-n-itens/"/>
    <updated>2011-04-12T14:59:00-03:00</updated>
    <id>http://lornlab.org/blog/2011/04/12/meu-ambiente-de-trabalho-em-n-itens</id>
    <content type="html"><![CDATA[<p>O peka me convidou para a correntinha do bem, e ainda me intimou pelo twitter :/ aqui está como é meu ambiente de trabalho.</p>

<ul>
<li><p><a href="http://lornlab.org/blog/2011/04/12/usando-zsh/">ZSH</a>, o cara é tão bom que tem um post só para ele :)</p></li>
<li><p><a href="http://code.google.com/p/iterm2/">iTerm2</a> - Eu sempre usei o Terminal.App padrão do MacOSX, há um tempo atrás ouvi falar do iTerm, mas
dado a minha pessima organização, acabei me esquecendo. Por causa dessa foto no twitter/facebook recebi a dica do
iTerm2 e vou dizer, deixa o Terminal.App no chinelo tem fullscreen, 256 cores, busca, histórico propia, só instalando para
você ver o que eu estou falando pena que está em alpha, mas estou atualizando a cada relase.</p></li>
<li><p>Git - No trabalho apenas o git, em casa git e github.com/lorn onde faço minhas brincadeiras</p></li>
<li><p><a href="http://www.virtualbox.org/">Virtualbox</a> - Para emular um Linux ou Windows quando preciso</p></li>
<li><p><a href="http://www.irssi.org/">Irssi</a> - irc remoto ( via ssh ) 24/7 na irc.freenode.net e irc.perl.org :)</p></li>
<li><p><a href="http://sites.google.com/site/yorufukurou/">Yorufukoru</a> - Cliente de twitter, vejo pouco o twitter, mas quando vejo é com ele.</p></li>
<li><p>Musica - Tudo o que eu preciso/quero ouvir está no iPhone então ligo o fone de ouvido nele e já era, de vez em quando ouço uma
coisa ou outra do youtube.</p></li>
<li><p><a href="http://www.vim.org/">Vim</a> - Por ultimo, mas não menos importante &#8220;O Editor&#8221;, minhas configurações estão <a href="https://github.com/lorn/vim_confs">aqui</a>.</p></li>
</ul>


<p>Passo a bola agora para o <a href="http://bitforest.org/">@dsouza</a>, @pahagon, @ldaugusto e 2 hit combo no @wendelscardua</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Usando ZSH]]></title>
    <link href="http://lornlab.org/blog/2011/04/12/usando-zsh/"/>
    <updated>2011-04-12T13:31:00-03:00</updated>
    <id>http://lornlab.org/blog/2011/04/12/usando-zsh</id>
    <content type="html"><![CDATA[<p>Esses dias re-descobri o zsh, já havia testado a um tempo atrás mas agora foi pra valer :)</p>

<p>E vou dizer, não há shell melhor :) muito melhor que o Bash</p>

<ul>
<li><p>O historico do ZSH é compartilhado por <em>TODAS</em> sessões dele, diferente do bash que cada sessão tem seu histórico
( e você tem que ficar procurando onde foi que digitou aquele comando para recuperar ele do histórico ).</p></li>
<li><p>ZSH tem autocomplete para tudo, ok bash também, mas o ZSH é bem mágico ele tem autocomplete para o kill, listando os
processos que estão rolando e você digita o nome ele já tras o pid para você, ps -aux? nunca mais.</p></li>
<li><p>Autocomplete do ssh baseado no seu ~/.ssh/know_hosts ou seja, acessou a maquina, ssh ma<tab> autocomplete :D</p></li>
<li><p>Continuando o autocomplete, no MacOSX temos um instalado de pacote chamado brew para instalar pacotes nele é
mais ou menos como no apt-get, busca e depois install então: brew seach xyz, brew install xyz. Com o zsh ele irá fazer
a busca no install então brew install x<tab> pronto, já mostra para você todos os pacotes que casam com aquela string.</p></li>
<li><p>E bem compativell com o bash, eu não tive nenhum problema em fazer: cat ~/.bashrc >> ~/.zshrc e tudo que eu tinha configurado no bash funciona no zsh</p></li>
</ul>


<p>Comece usando agora é só seguir a receita de bolo desse repositorio <a href="https://github.com/robbyrussell/oh-my-zsh/">https://github.com/robbyrussell/oh-my-zsh/</a> ele deixou
 o zsh bem bonito, com suporte a temas e plugins ( e você verá como é facil fazer temas e plugins ) o meu fork desse repositorio você acha aqui.</p>

<p>Esse são os motivos básicos, caso eu lembro de mais algum matador eu coloco aqui. Mas fica a dica, use zsh e <a href="http://www.youtube.com/watch?v=3oB2rMaY0ho&amp;feature=related">filtro solar</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl Para Sysadmins E DBAs]]></title>
    <link href="http://lornlab.org/blog/2009/01/20/perl-para-sysadmins-e-dbas/"/>
    <updated>2009-01-20T15:08:00-02:00</updated>
    <id>http://lornlab.org/blog/2009/01/20/perl-para-sysadmins-e-dbas</id>
    <content type="html"><![CDATA[<p>Rau!</p>

<p>Depois de séculos sem posts, apenas um post para linkar para o material da minha palestra no fisl ( que não foi das melhores porque não terminei a palestra antes e fiquei BEM doente em POA :/ )</p>

<p><a href="http://lornlab.org/palestra_fisl">http://lornlab.org/palestra_fisl/</a></p>

<p>Agradecimentos para o Claudemir Ivan, que disse que não estava conseguindo acessar os arquivos.</p>

<p>Falow, algum dia meu blog em Catalyst sai</p>

<p>Update: O problema era que o Dreamhost estava interpretando os .pl :/ coloquei as extensões em .txt e tudo</p>

<p>funcionou.</p>

<p>Update 2: Agora com o plugin de gist do github.com o código fica bonito e indentado</p>

<p>Update 3: Agora quem trata o gist é o octopress \,,/</p>

<div><script src='https://gist.github.com/760136.js?file='></script>
<noscript><pre><code>#!/usr/bin/perl

=head1 NAME

    conta_acessos 
    
=head1 DESCRIPTION

=head1 AUTHOR

    Renan Rangel &lt;rvr777 at gmail dot com&gt;
    Lorn &lt;lorn at lornlab dot org&gt;

=head1 COPYRIGHT 

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
    
=cut

use strict;
use Data::Dumper;

die &lt;DATA&gt;
  unless scalar @ARGV;
  
our $VERSION = '0.1';

my ($c, @p, %option) = 0;
my %hash_count = ();
# look for options and patterns
my $ip = 0;
foreach (@ARGV) {
  if (/^-(.+)$/) {
      my $arg = $1;
    if($arg eq 'ip'){
        $ip = 1;
    }elsif ($arg eq 'h'){
        do { 
            print &lt;DATA&gt;;
            exit(0);
        };
    }elsif ($arg eq 'i'){
        do {
            $option{i} = 1;
            next;
        };
    }elsif ($arg eq 'v'){
        do {
            print &quot;conta_acessos $VERSION\nAuthor: Renan Rangel &lt;rvr777\@gmail.com&gt;\n        Lorn &lt;lorn.br\@gmail.com.br&gt;\n&quot;;
            exit(0)
        };
    }else{
        die &lt;DATA&gt;;
    }
  }else{
      die &lt;DATA&gt;;
  }
}

# search and replace the pattern with the colored text
my $found = 0;
while (my $line = &lt;STDIN&gt;) {
    my ($ip) = split(/\s/,$line);
    $hash_count{$ip} = $hash_count{$ip} + 1;
}

print Dumper \%hash_count;    
foreach my $line ( sort { $hash_count{$b} &lt;=&gt; $hash_count{$a} } keys
%hash_count) {
    my $acessos = $hash_count{$line};
    print &quot;ip: $line\tacessos:\t$acessos\n&quot;;
}

exit(0);

__DATA__
Usage: 
  tail -1000 /var/log/apache2/access.log | perl conta_acessos.pl -ip 
  
Options:
  -h = Print help message
  -i = Case insensitive
  -v = Show version</code></pre></noscript></div>




<iframe scrolling="no" marginheight="0" marginwidth="0" frameborder="0" height="355" width="425" src="http://www.slideshare.net/slideshow/embed_code/7618654"></iframe>


<p><a href="http://www.slideshare.net/lornlab/perl-sysadmin-dba-7618654">Link slideshare</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sandman - Casa De Bonecas]]></title>
    <link href="http://lornlab.org/blog/2007/02/17/sandman-casa-de-bonecas/"/>
    <updated>2007-02-17T13:06:00-02:00</updated>
    <id>http://lornlab.org/blog/2007/02/17/sandman-casa-de-bonecas</id>
    <content type="html"><![CDATA[<p>Como Sandman é tão famoso e eu nunca tinha lido, não resisti, e comecei a ler  a queria começar pelo 1o mas a edição
está esgotada (!!) então comecei pelo 2o, Casa de Bonecas pelo que percebi não há nenhum problema com isso você não perde nada.</p>

<p><img class="center" src="http://media.tumblr.com/tumblr_ljitlep23m1qhdaqj.jpg"></p>

<p>O titulo é estranho e você só entende o porque dele nas ultimas 10 páginas.</p>

<p>Sandman é muito legal, eu nunca tinha lido nada do Neil Gaiman ok, outro erro, mas depois de Sandman, fiquei animado a comprar
 alguns livros dele, agora preciso comprar outro “livro” de Sandman mas, só 1 por mês então, o próximo só no mês que vem é muito caro.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Livro Minority Report]]></title>
    <link href="http://lornlab.org/blog/2007/01/23/livro-minority-report/"/>
    <updated>2007-01-23T12:11:00-02:00</updated>
    <id>http://lornlab.org/blog/2007/01/23/livro-minority-report</id>
    <content type="html"><![CDATA[<p>Se você está pensando em comprar este livro para conhecer mais detalhes sobre o filme, coisas escondidas, esquece.</p>

<p><img class="center" src="http://media.tumblr.com/tumblr_ljitkhfY8P1qhdaqj.jpg"></p>

<p>O livro é bem diferente do filme, tem os precogs e o personagem do Tom Cruise, mais o resto é bem diferente.</p>

<p>O livro tem vários contos, o 1a é o Minority Report tem apenas 60 paginas (!!), e não é um dos melhores do livro,
o melhor na minha opinião é o conto que originou o filme <a href="http://pt.wikipedia.org/wiki/Total_Recall">&#8220;Vingador do futuro&#8221;</a>  lembra? o conto chama-se:</p>

<p>Podemos recordar para você, por um preço razoável
O bom de um livro com vários contos pequenos, é que você não precisa passar por 300 ~ 400 paginas para saber o final, a história é bem sucinta. Acabou um conto? leia outro livro se quiser.</p>

<p>Isso é uma das coisas que eu mais gosto em Ficção Cientifica, vai direto ao ponto não tem encheção de linguiça e você fica pensando:</p>

<blockquote><p>“Como conseguiram pensar isso a 20 ~ 30 anos atrás?”</p></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Relato Conilsi - YAPC::SA::2006]]></title>
    <link href="http://lornlab.org/blog/2006/11/21/relato-conilsi-yapc-sa-2006/"/>
    <updated>2006-11-21T13:21:00-02:00</updated>
    <id>http://lornlab.org/blog/2006/11/21/relato-conilsi-yapc-sa-2006</id>
    <content type="html"><![CDATA[<p>O Conisli desse ano, certamente foi o melhor que eu participei, e como já disse para alguns amigos
 monges para o Perl, foi melhor que o Fisl</p>

<p>Infelizmente não podemos contar com a presença do Larry Wall, ele ficou doente aos 45 do 2a tempo e não pode vir,
 mas a Hacker Audrey Tang deu conta do recado, dando palestrar muito boas.</p>

<p>PS: vocês precisam ver ela programando, é meio insano, as vezes parece que ela está escrevendo um texto normal,
 sem contar que ela digita muito rápido.</p>

<p>Vamos a palestra:</p>

<p>1a Dia:</p>

<p>Optimization for fun: Primeiro Keynote do evento, Audrey Tang começou falando sobre comida, sim comida! achei estranho
 também, mas depois entendi, ela comparou o Mc Donald’s com o software proprietário, vem em uma caixinha fechada, você não
 pode dar opinião, já a comida em restaurante normal, muitas vezes o chefe pergunta se você gostou, se você der uma sugestão talvez eles aceitem.</p>

<p>Ela também falou do modelo “anarquismo” de desenvolvimento, como se você acha que uma coisa tá errada, não vá falar pro
criador que está errada, faça a coisa certa e mostre pro criador, muitas vezes ao fazer isso você descobre que seu jeito é
errado, mas modificando um pouco é legal, e como ela mesmo disse você ganha mais um “commit bit”</p>

<p>Nesse meio tempo no stand da TheSource o Alex, que eu esqueci o apelido porque é muito complicado, alguma coisa zohar sei lá,
 pois bem ele me mostrou um bug no mysql, mas especificamente no UDF do mysql, que me deixou um pouco assustado e que me
 lembra como eu sou feliz sendo programador agora ao invés de Administrador de rede</p>

<p>2a dia:</p>

<p>A Filosofia do Unix: Conheci a famosa figura do software livre, Rubens Queiroz, responsável pelo Dicas-L e pelo Rautu. Deu uma
palestra muito boa, mostrando de forma divertida que ( ironicamente … ) era sua experiência de trabalho, disse coisas do
 tipo “quando você digita um comando e ele demora muito, é porque há algo errado..” hehe, muito bom.
Depois do almoço foi as palestras dos monges</p>

<p>ETL e Perl: Fui ver essa palestra mais interessado nas Expressões Regulares, era como se ETL fosse “yet another” sigla para
 alguma coisa que se faz com expressão regular  mas ai que fui entender, que ETL é uma coisa muito legal, não sei explicar
 em poucas palavras se estão interessado vejam na wikipedia.</p>

<p>PPS ( Postfix Perl Spam): O mda, contou para nós nessa palestra um pouco da sua experiência com postfix, e o quanto a empresa que
 ele trabalha economizou com softwares livres, com o Clamav, eu não me lembro muito bem o valor, mais era muito, sem contar que com
 software livre tudo funcionava, o outro proprietário levava o servidor a 100% de load average e não funcionava direito.</p>

<p>Construindo um motor de similiaridade com Perl: O monge português lá da terra do “vira-vira…” Nelio Nunes nos mostrou uma introducão
 sobre “Information Retrieval” com Perl, muito legal, o problema era que qualquer errinho que ele cometia no exemplo que ele estava escrevendo
 o mago já zuava “ele é português…” hehe.</p>

<p>Teste, Perl e TAP: Adriano Ferreira um monge que veio lá de Minas, mostrou como é fácil o “jeito” Perl de testar as coisas, eu nunca
 tinha tido curiosidade sobre isso, mas quando ele começou a mostrar eu já pensei “hmm, vou parar com aqueles programinhas testes_foobar.pl,
 e fazer algo mais <em>Perl</em>”</p>

<p>3a Dia:</p>

<p>Este dia perdi a hora, estava cansado  e perdi a palestra do Flavio Glock sobre o v6.pm a implementação do Perl6 em Perl5,
 mas cheguei a tempo para a palestra da Audrey.</p>

<p>Perl6 Now!: Um introdução ao Perl6, aquele tipo de coisa que voce fica babando “eu quero..” hehe</p>

<p>Depois o Solli deu um curso de Perl5 na parte de mini-cursos do Conisli, muito bem pensado por sinal, não estou certo se
 o mini-curso foi no 3a dia ou no 2a, tenho certeza que o mini-curso de Perl6 foi no 3a dia, e pasmem vocês lotou, tinha pessoas que
 não conhecia o Perl, que queria conhecer o Perl6, o curso foi ministrado pelo Flávio Glock.</p>

<p>Na mesma hora estava acontecendo também a palestra do David Fetter.
PL/Perl: Como fazer Procedures usando Perl, isso pode ser usado para muitas coisas, ele deu foco no uso para Benchmark, em um dos
 scripts de exemplo dele, ele pegava o pid que um SELECT criava, e analisava olhando no output do ps, quanto tempo demorou, etc.</p>

<p>Paralelamente  estava acontecendo também os LightningTalks de Perl ( Sim, eu estava pulando de uma sala a outra ) Cheguei no começo da
 palestra da Audrey, que de acordo a descrição que ela me mandou por email.</p>

<blockquote><p>I’d like to add one “ppencode” talk to the LT schedule. The abstract is simply: “The highly acclaimed talk from YAPC::Asia now comes to Latin America!”</p></blockquote>


<p>Vocês podem ter uma previa da palestra neste link do youtube.</p>

<p>Bom, depois disso foi o fechamento, para terminar algumas coisas:</p>

<p>-O Conisli está ficando melhor a cada ano</p>

<p>-Agradecimento a Segula, pelo patrocinio da Audrey Tang e do Larry Wall.</p>

<p>-Usuarios de Slackware não gostam de chaves ssh dos outros</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FISL 7.0]]></title>
    <link href="http://lornlab.org/blog/2006/04/19/fisl-7-0/"/>
    <updated>2006-04-19T13:27:00-03:00</updated>
    <id>http://lornlab.org/blog/2006/04/19/fisl-7-0</id>
    <content type="html"><![CDATA[<p>ae pessoal, estou no FISL o Google esta aqui, vou atualizando esse post sempre que possivel e logo mais tem fotos</p>

<p>Cheguei ontem ao FISL, não postei nada de la porque o telecentro vivia cheio de gente, e a maioria vendo o orkut -_-</p>

<p>Bom, mas eis o meu relato, chegando lá logo na entrada já dava para perceber que o Google patrocinou boa parte do fisl,
 banners logo na entrada e o crachá estava escrito Google embaixo, a parte de grupo de usuários estava menor que o ano passado,
 estava bom, rever velhos amigos, e adquirir mais uns novos</p>

<p>Bom antes de mais nada, esse e o MEU relato do evento, o computador que eu estou digitando está com problemas no assento e eu
estou com preguica de arrumar, essa foi minha visão das palestrar, se eu errei alguma coisa, ou entedi mal, adoraria que alguém me
 mandasse um email dizendo isso lorn dot br at gmail dot com, eu arrumarei o mais rápido possivel.</p>

<p>1a Dia – 19/06</p>

<p>11:00 – Comparando PostgreSQL e MySQL: Desempenho de Aplicações Transacionais</p>

<p>Uma palestra bem interessante, apesar de eu desconfiar dos resultados, hehe, os palestrantes ( Carlos Eduardo Santos, Rilson Oscar do Nascimento )
 tinham muito conhecimento sobre SGBDs.</p>

<p>O Resultado dessa briga foi que ate 1100 warehouse, eles tinham o mesmo desempenho, acima disso o pgsql foi ganhando exponencialmente do mysql devo
lembrar que os 2 estavam “tunados”.</p>

<p>12:00 – The Filesystem namespace past and present</p>

<p>A 1a palestra em inglês que eu vi no evento, boa tambem, o palestrante e um dos desenvolvedores do kernel, e explicou muito bem tudo,
o Filesystem namespace quando sair, vai substituir o chroot, porque?</p>

<p>Porque para usuarios diferente eu vou poder ter pastas iguais com conteudos diferente  , deixa eu explicar melhor</p>

<p>no caso do apache</p>

<p>o /var/www/htdocs/ tem todas as paginas do seu servidor, isso hoje em dia estaria em chroot pra poder proteger o sistema em si, com o
 Filesystem namespace o /var/www/htdocs/ so teria aquivos para o usuario apache, se eu desse um <code>ls</code> la como meu usuario, nao iria mostrar nada, interessante nao?</p>

<p>16:00 -The X Community — History and Directions</p>

<p>Essa palestra e o tipo de palestra historica, um dos criadores do X!!, sim, o cara explicou todas historia como tudo comecou, o que aconteceu com o Xfree86 versus X.org,
bem legal, eu nao sabia mais o X de inicio era um software 100% comercial ai um pessoal de Berkley se nao me engano comecou fazer sua versao do X, baseada na que ja existia,
logico que o pessoal do comercial nem ligou, encurtando a historia alguns anos depois o X comercial quase faliu, diz o palestrante que ele existe ate hoje, alguem ja ouviu falar dele?</p>

<p>Bom esse dia eu perdi 2 palestras importantes</p>

<p>Migrando de Oracle para PostgreSQL</p>

<p>DBI-Link: A Universal Database Connector</p>

<p>A 1a foi porque eu perdi o horario quando fui ver ja estava acabando e a segunda, foi porque teve um problema na organizacao e o horario
ficou mudando, nao sou eu mais todos os perl mongers perderam</p>

<p>2a Dia – 20/06</p>

<p>10:00 - Communication is Free</p>

<p>Quem deu essa palestra foi o Randal, ele falou dos meios de comunicacao livre, de hoje e de antigamente, desde o email ate USENET, IRC..</p>

<p>11:00 – 13:00</p>

<p>Nesse horario comecou “oficialmente” o YAPC::Brasil ( Yet Another Perl Conference )</p>

<p>A primeira palestra foi sobre Perl6, o novo perl realmente esta muito bom, esta seguindo um novo lema um linguagem para todas as linguagens,
hehe isso me lembra LOTR  com ela voce vai poder programar em perl6, e gerar o bytecode em Java, JavaScript, Flash ( fizeram pra brincar )
entrei outras, foras os novos recursos de gramatica, ah, ainda ganhei um livro nessa palestra Perl6 &amp; Parrot.</p>

<p>A Segunda foi do Randal explicando inside-out objects uma coisa meio complicada que eu não entendi muito bem, hehe.</p>

<p>14:00 – Open Source at Google</p>

<p>Essa foi a palestra do Eric. Pollman, basicamente explicando o summer of code uma palestra muito legal que de certo modo me insentivou a participar,
o palestrante comentou que no ano passado teve 3 participantes brasileiros 1 deles estava aqui no FISL e inclusive vai palestrar sobre a ferramente
que ele fez para o summer of code, parabens ao Adriano Monteiro Marques pelo seu frontend do nmap, vou testa-lo logo que puder, não pude ver a palestra.</p>

<p>15:00 – C Minimal Perfect Hash – hashing large ammounts of data</p>

<p>Essa palestra apesar do titulo em ingles foi em portugues, foi de um dos empregados do google em BH, o pessoal de la e super gente fina e nessa
 palestra ele explicou como seria uma hash minimamente perfeito, sem “colisoes” ele baseou esse projeto numa tese de um amigo dele bem legal</p>

<p>Logo depois dessa apesar de nao estar na programacao outro cara de BH falou sobre o seu ftpfs, que ele fez em cima da libcurl, bem legal.</p>

<p>18:00 – PL/Perl em Postgresql</p>

<p>Essa palestra foi do David Better, inicialmente seria no YAPC, mais depois foi passada pro Stand do Governo Federal bem legal fazer procedures em Perl
para o Postgresql, e ainda poder usar modulos perl nessas procedures.</p>

<p>Depois escrevo dos outros dias e mais detalhes, estou realmente cansado</p>

<p>3a Dia – 21/06</p>

<p>11:00 - O Portal do Monastério, como se tornar um Monge Perl.</p>

<p>Essa palestra nos surpreendeu, todos os monges falaram “voces viram como lotou a sala?” hehe, uma palestra muito boa, com um visao de todos os principais
sites/comunidades de Perl</p>

<p>15:00 -Ferramentas de software livre ou código aberto para bioinformática</p>

<p>Fui ver essa palestra porque e um assunto que me interessa, mais particularmente por causa do Perl, e nao deu outra o palestrante, falou muito de Perl,
mas e uma coisa meio complicada principalmente a parte da Biologia, hehe, mas valeu pra conhecer.</p>

<p>16:00 – Software livre no Nintendo DS</p>

<p>Sem comentarios, essas foi uma das melhores palestras do FISL, o palestrante, Ricardo Bittencourt transformou um assunto massantes, em uma coisa engracada
contando muitas curiosidades sobre os videogames antigos , deu ate vontade de comprar um Nintendo DS</p>

<p>18:00 -Deixe o gerenciamento do anti-spam com os usuários</p>

<p>Uma solucao estilo gmail, muito interessantes, pois pode ser implementada por usuario ou por grupo de usuarios, foi explicado muito bem o conceito e o
interessante e que do jeito que foi apresentado voce nao precisa usar as mesmas ferramentas do palestrante.</p>

<p>Esse dia perdi a palestra de XUL  , fiquei preocupado com a carona e nao lembrei da palestra</p>

<p>Infelizmente nao pude ficar no ultimo dia, logo nao tenho um relato sobre o “leilao”.</p>

<p>Nesse meu relato eu nao disse, mesmo porque nao iria lembrar mais as “rodas” formadas na parte de grupo de usuario, as trocas de ideias, foi quase
tao bom quanto qualquer palestra, que venha o Conisli, ah! para os amantes de Perl, estao confirmados:</p>

<ul>
<li><p>Larry Wall ( Criado do Perl, arquiteto do Perl6 )</p></li>
<li><p>Audrey Tang ( chefe do desenvolvimento do Pugs/Perl 6 )</p></li>
</ul>


<p>E esta prevista a vinda do Theo de Raadt, ja ouviram falar?</p>

<p>Ate mais.. ( post longo nao?)</p>
]]></content>
  </entry>
  
</feed>
